<document xmlns="http://maven.apache.org/changes/1.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/changes/1.0.0
			      http://maven.apache.org/xsd/changes-1.0.0.xsd">
  
  <!-- https://maven.apache.org/plugins/maven-changes-plugin/changes.html -->
  <!-- action types: 
       add: added functionnality to the project.
       fix: bug fix for the project.
       update: updated some part of the project.
       remove: removed some functionnality from the project. -->
  <properties>
    <title>testhelpers</title>
    <author email="reissner@simuline.eu">Ernst Reissner</author>
  </properties>
  <body>
<!-- TBD: restore the icons for open, run, stop, break and exit. -->
<!-- release plan:
  - update GUI: JavaFX 
  - in GUI add a label showing the current version and build time. 
  - add time consumption and memory consumption to the outputs. 
    This shall be done for the leaves of the test tree and also accumulation for the other nodes. 
  - added console output. 
  - make the script part of the distribution: include it and tell how to extract 
    using dependency plugin in the user project. 
  - in script part include check that it is invoked in base directory. 
    Then also many pieces of information are from different sources. 
    Try to read off the pom to obtain less configuration work. 
  - trigger recompile after save. 
    vscode: "editor.codeActionsOnSave": { "source.fixAll.eslint": true }
    emacs: after-save-hook
  - add history and a bit of user guidance. 
  - make mvn site-deploy functional
  - in eu.simuline.testhelpers.DTestHelper.createPower2() 
    try with return value int instead of double. 
    This unveils weaknesses in L2R, concerning testcases 
    but also concerning overflow of correction and tolerance. 
  - add a mechanism to avoid script and the pom unaligned. 
    Either keep the script aligned e.g. creating it from the pom 
    or avoid the script altogether.
    A suggestion to implement would be to have a plugin. 
    Either the plugin writes the script or it fires the GUI itself. 
-->

<release version="1.2" date="2022-01-01"
          description="">
  <action dev="reissner" type="add">
        parameter to specify the editor used to view and modify locations
        in conjunction with failures.
        Currently, vscode and emacs(client) are supported.
  </action>
  <action dev="reissner" type="fix">
    Updated dependency to icons. 
    Now icons show up correctly again. 
  </action>
  <action dev="reissner" type="fix">
    Made buttons functional (again?). 
  </action>
</release>

<release version="1.1" date="2022-05-07" 
          description="No idea">
  <action dev="reissner" type="update">
        Quality improvements.
  </action>
</release>

<release version="1.0" date="2007-07-21" 
          description="First release, extracted from general repo">
  <action dev="reissner" type="add">
        Added to this project what was extracted from general source tree. 
        Date is the first trace. 
  </action>
</release>

</body>
</document>
